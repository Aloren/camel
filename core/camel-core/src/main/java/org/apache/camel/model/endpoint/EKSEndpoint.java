/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.model.endpoint;

import javax.annotation.Generated;

/**
 * The aws-kms is used for managing Amazon EKS
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointDslMojo")
public class EKSEndpoint {


    public static class EKSCommon<T extends EndpointConfiguration>
            extends
                EndpointConfiguration<T> {
        private String label;
        private String region;
        private Boolean basicPropertyBinding;
        private Boolean synchronous;

        /**
         * Logical name. The option is a java.lang.String type.
         */
        public T label(String label) {
            this.label = label;
            return (T) this;
        }

        /**
         * The region in which EKS client needs to work. The option is a
         * java.lang.String type.
         */
        public T region(String region) {
            this.region = region;
            return (T) this;
        }

        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities. The option
         * is a boolean type.
         */
        public T basicPropertyBinding(boolean basicPropertyBinding) {
            this.basicPropertyBinding = basicPropertyBinding;
            return (T) this;
        }

        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported). The option
         * is a boolean type.
         */
        public T synchronous(boolean synchronous) {
            this.synchronous = synchronous;
            return (T) this;
        }

        public String getLabel() {
            return label;
        }

        public void setLabel(String label) {
            this.label = label;
        }

        public String getRegion() {
            return region;
        }

        public void setRegion(String region) {
            this.region = region;
        }

        public Boolean getBasicPropertyBinding() {
            return basicPropertyBinding;
        }

        public void setBasicPropertyBinding(Boolean basicPropertyBinding) {
            this.basicPropertyBinding = basicPropertyBinding;
        }

        public Boolean getSynchronous() {
            return synchronous;
        }

        public void setSynchronous(Boolean synchronous) {
            this.synchronous = synchronous;
        }
    }

    public static class EKSConsumer extends EKSCommon<EKSConsumer> {
    }

    public static class EKSProducer extends EKSCommon<EKSProducer> {
        private String accessKey;
        private Object eksClient;
        private EKSOperations operation;
        private String proxyHost;
        private Integer proxyPort;
        private String secretKey;

        /**
         * Amazon AWS Access Key. The option is a java.lang.String type.
         */
        public EKSProducer accessKey(String accessKey) {
            this.accessKey = accessKey;
            return (EKSProducer) this;
        }

        /**
         * To use a existing configured AWS EKS as client. The option is a
         * com.amazonaws.services.eks.AmazonEKS type.
         */
        public EKSProducer eksClient(Object eksClient) {
            this.eksClient = eksClient;
            return (EKSProducer) this;
        }

        /**
         * The operation to perform. The option is a
         * org.apache.camel.component.aws.eks.EKSOperations type.
         */
        public EKSProducer operation(EKSOperations operation) {
            this.operation = operation;
            return (EKSProducer) this;
        }

        /**
         * To define a proxy host when instantiating the EKS client. The option
         * is a java.lang.String type.
         */
        public EKSProducer proxyHost(String proxyHost) {
            this.proxyHost = proxyHost;
            return (EKSProducer) this;
        }

        /**
         * To define a proxy port when instantiating the EKS client. The option
         * is a java.lang.Integer type.
         */
        public EKSProducer proxyPort(Integer proxyPort) {
            this.proxyPort = proxyPort;
            return (EKSProducer) this;
        }

        /**
         * Amazon AWS Secret Key. The option is a java.lang.String type.
         */
        public EKSProducer secretKey(String secretKey) {
            this.secretKey = secretKey;
            return (EKSProducer) this;
        }

        public String getAccessKey() {
            return accessKey;
        }

        public void setAccessKey(String accessKey) {
            this.accessKey = accessKey;
        }

        public Object getEksClient() {
            return eksClient;
        }

        public void setEksClient(Object eksClient) {
            this.eksClient = eksClient;
        }

        public EKSOperations getOperation() {
            return operation;
        }

        public void setOperation(EKSOperations operation) {
            this.operation = operation;
        }

        public String getProxyHost() {
            return proxyHost;
        }

        public void setProxyHost(String proxyHost) {
            this.proxyHost = proxyHost;
        }

        public Integer getProxyPort() {
            return proxyPort;
        }

        public void setProxyPort(Integer proxyPort) {
            this.proxyPort = proxyPort;
        }

        public String getSecretKey() {
            return secretKey;
        }

        public void setSecretKey(String secretKey) {
            this.secretKey = secretKey;
        }
    }

    public static enum EKSOperations {
        listClusters, describeCluster, createCluster, deleteCluster;
    }
}