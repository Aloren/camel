/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.model.endpoint;

import javax.annotation.Generated;
import org.apache.camel.model.EndpointDefinition;

/**
 * The camel-xchange component provide access to many bitcoin and altcoin
 * exchanges for trading and accessing market data.
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointDslMojo")
public class XChangeEndpoint {


    public static class XChangeCommon<T extends EndpointDefinition>
            extends
                EndpointDefinition<T> {
        XChangeCommon(String path) {
            super("xchange", path);
        }
        /**
         * The exchange to connect to. The option is a java.lang.String type.
         */
        public T name(String name) {
            this.properties.put("name", name);
            return (T) this;
        }
        /**
         * The currency. The option is a org.knowm.xchange.currency.Currency
         * type.
         */
        public T currency(Object currency) {
            this.properties.put("currency", currency);
            return (T) this;
        }
        /**
         * The currency pair. The option is a
         * org.knowm.xchange.currency.CurrencyPair type.
         */
        public T currencyPair(Object currencyPair) {
            this.properties.put("currencyPair", currencyPair);
            return (T) this;
        }
        /**
         * The method to execute. The option is a
         * org.apache.camel.component.xchange.XChangeConfiguration.XChangeMethod
         * type.
         */
        public T method(Object method) {
            this.properties.put("method", method);
            return (T) this;
        }
        /**
         * The service to call. The option is a
         * org.apache.camel.component.xchange.XChangeConfiguration.XChangeService type.
         */
        public T service(Object service) {
            this.properties.put("service", service);
            return (T) this;
        }
        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities. The option
         * is a boolean type.
         */
        public T basicPropertyBinding(boolean basicPropertyBinding) {
            this.properties.put("basicPropertyBinding", basicPropertyBinding);
            return (T) this;
        }
        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported). The option
         * is a boolean type.
         */
        public T synchronous(boolean synchronous) {
            this.properties.put("synchronous", synchronous);
            return (T) this;
        }
    }

    public static class XChangeConsumer
            extends
                XChangeCommon<XChangeConsumer>
            implements
                EndpointDefinition.Consumer {
        public XChangeConsumer(String path) {
            super(path);
        }
    }

    public static class XChangeProducer
            extends
                XChangeCommon<XChangeProducer>
            implements
                EndpointDefinition.Producer {
        public XChangeProducer(String path) {
            super(path);
        }
    }
}