/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.model.endpoint;

import javax.annotation.Generated;

/**
 * The fop component allows you to render a message into different output
 * formats using Apache FOP.
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointDslMojo")
public class FopEndpoint {


    public static class FopCommon extends EndpointConfiguration {
        /**
         * The primary output format is PDF but other output formats are also
         * supported. The option is a
         * org.apache.camel.component.fop.FopOutputType type.
         */
        private FopOutputType outputType;
        /**
         * Allows to use a custom configured or implementation of
         * org.apache.fop.apps.FopFactory. The option is a
         * org.apache.fop.apps.FopFactory type.
         */
        private Object fopFactory;
        /**
         * The location of a configuration file which can be loaded from
         * classpath or file system. The option is a java.lang.String type.
         */
        private String userConfigURL;
        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities. The option
         * is a boolean type.
         */
        private boolean basicPropertyBinding;
        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported). The option
         * is a boolean type.
         */
        private boolean synchronous;

        public FopOutputType getOutputType() {
            return outputType;
        }

        public void setOutputType(FopOutputType outputType) {
            this.outputType = outputType;
        }

        public Object getFopFactory() {
            return fopFactory;
        }

        public void setFopFactory(Object fopFactory) {
            this.fopFactory = fopFactory;
        }

        public String getUserConfigURL() {
            return userConfigURL;
        }

        public void setUserConfigURL(String userConfigURL) {
            this.userConfigURL = userConfigURL;
        }

        public boolean getBasicPropertyBinding() {
            return basicPropertyBinding;
        }

        public void setBasicPropertyBinding(boolean basicPropertyBinding) {
            this.basicPropertyBinding = basicPropertyBinding;
        }

        public boolean getSynchronous() {
            return synchronous;
        }

        public void setSynchronous(boolean synchronous) {
            this.synchronous = synchronous;
        }
    }

    public static class FopConsumer extends FopCommon {
    }

    public static class FopProducer extends FopCommon {
    }

    public static enum FopOutputType {
        pdf, ps, pcl, png, jpeg, svg, xml, mif, rtf, txt;
    }
}