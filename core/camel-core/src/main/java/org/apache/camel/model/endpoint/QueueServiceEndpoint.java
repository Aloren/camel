/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.model.endpoint;

import javax.annotation.Generated;
import org.apache.camel.ExchangePattern;
import org.apache.camel.spi.ExceptionHandler;

/**
 * The azure-queue component is used for storing and retrieving messages from
 * Azure Storage Queue Service.
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointDslMojo")
public class QueueServiceEndpoint {


    public static class QueueServiceCommon<T extends EndpointConfiguration>
            extends
                EndpointConfiguration<T> {
        private String containerAndQueueUri;
        private Object azureQueueClient;
        private Object credentials;
        private Boolean basicPropertyBinding;
        private Boolean synchronous;

        /**
         * Container Queue compact Uri. The option is a java.lang.String type.
         */
        public T containerAndQueueUri(String containerAndQueueUri) {
            this.containerAndQueueUri = containerAndQueueUri;
            return (T) this;
        }

        /**
         * The queue service client. The option is a
         * com.microsoft.azure.storage.queue.CloudQueue type.
         */
        public T azureQueueClient(Object azureQueueClient) {
            this.azureQueueClient = azureQueueClient;
            return (T) this;
        }

        /**
         * Set the storage credentials, required in most cases. The option is a
         * com.microsoft.azure.storage.StorageCredentials type.
         */
        public T credentials(Object credentials) {
            this.credentials = credentials;
            return (T) this;
        }

        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities. The option
         * is a boolean type.
         */
        public T basicPropertyBinding(boolean basicPropertyBinding) {
            this.basicPropertyBinding = basicPropertyBinding;
            return (T) this;
        }

        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported). The option
         * is a boolean type.
         */
        public T synchronous(boolean synchronous) {
            this.synchronous = synchronous;
            return (T) this;
        }

        public String getContainerAndQueueUri() {
            return containerAndQueueUri;
        }

        public void setContainerAndQueueUri(String containerAndQueueUri) {
            this.containerAndQueueUri = containerAndQueueUri;
        }

        public Object getAzureQueueClient() {
            return azureQueueClient;
        }

        public void setAzureQueueClient(Object azureQueueClient) {
            this.azureQueueClient = azureQueueClient;
        }

        public Object getCredentials() {
            return credentials;
        }

        public void setCredentials(Object credentials) {
            this.credentials = credentials;
        }

        public Boolean getBasicPropertyBinding() {
            return basicPropertyBinding;
        }

        public void setBasicPropertyBinding(Boolean basicPropertyBinding) {
            this.basicPropertyBinding = basicPropertyBinding;
        }

        public Boolean getSynchronous() {
            return synchronous;
        }

        public void setSynchronous(Boolean synchronous) {
            this.synchronous = synchronous;
        }
    }

    public static class QueueServiceConsumer
            extends
                QueueServiceCommon<QueueServiceConsumer> {
        private Boolean bridgeErrorHandler;
        private ExceptionHandler exceptionHandler;
        private ExchangePattern exchangePattern;

        /**
         * Allows for bridging the consumer to the Camel routing Error Handler,
         * which mean any exceptions occurred while the consumer is trying to
         * pickup incoming messages, or the likes, will now be processed as a
         * message and handled by the routing Error Handler. By default the
         * consumer will use the org.apache.camel.spi.ExceptionHandler to deal
         * with exceptions, that will be logged at WARN or ERROR level and
         * ignored. The option is a boolean type.
         */
        public QueueServiceConsumer bridgeErrorHandler(
                boolean bridgeErrorHandler) {
            this.bridgeErrorHandler = bridgeErrorHandler;
            return (QueueServiceConsumer) this;
        }

        /**
         * To let the consumer use a custom ExceptionHandler. Notice if the
         * option bridgeErrorHandler is enabled then this option is not in use.
         * By default the consumer will deal with exceptions, that will be
         * logged at WARN or ERROR level and ignored. The option is a
         * org.apache.camel.spi.ExceptionHandler type.
         */
        public QueueServiceConsumer exceptionHandler(
                ExceptionHandler exceptionHandler) {
            this.exceptionHandler = exceptionHandler;
            return (QueueServiceConsumer) this;
        }

        /**
         * Sets the exchange pattern when the consumer creates an exchange. The
         * option is a org.apache.camel.ExchangePattern type.
         */
        public QueueServiceConsumer exchangePattern(
                ExchangePattern exchangePattern) {
            this.exchangePattern = exchangePattern;
            return (QueueServiceConsumer) this;
        }

        public Boolean getBridgeErrorHandler() {
            return bridgeErrorHandler;
        }

        public void setBridgeErrorHandler(Boolean bridgeErrorHandler) {
            this.bridgeErrorHandler = bridgeErrorHandler;
        }

        public ExceptionHandler getExceptionHandler() {
            return exceptionHandler;
        }

        public void setExceptionHandler(ExceptionHandler exceptionHandler) {
            this.exceptionHandler = exceptionHandler;
        }

        public ExchangePattern getExchangePattern() {
            return exchangePattern;
        }

        public void setExchangePattern(ExchangePattern exchangePattern) {
            this.exchangePattern = exchangePattern;
        }
    }

    public static class QueueServiceProducer
            extends
                QueueServiceCommon<QueueServiceProducer> {
        private Integer messageTimeToLive;
        private Integer messageVisibilityDelay;
        private QueueServiceOperations operation;
        private String queuePrefix;

        /**
         * Message Time To Live in seconds. The option is a int type.
         */
        public QueueServiceProducer messageTimeToLive(int messageTimeToLive) {
            this.messageTimeToLive = messageTimeToLive;
            return (QueueServiceProducer) this;
        }

        /**
         * Message Visibility Delay in seconds. The option is a int type.
         */
        public QueueServiceProducer messageVisibilityDelay(
                int messageVisibilityDelay) {
            this.messageVisibilityDelay = messageVisibilityDelay;
            return (QueueServiceProducer) this;
        }

        /**
         * Queue service operation hint to the producer. The option is a
         * org.apache.camel.component.azure.queue.QueueServiceOperations type.
         */
        public QueueServiceProducer operation(QueueServiceOperations operation) {
            this.operation = operation;
            return (QueueServiceProducer) this;
        }

        /**
         * Set a prefix which can be used for listing the queues. The option is
         * a java.lang.String type.
         */
        public QueueServiceProducer queuePrefix(String queuePrefix) {
            this.queuePrefix = queuePrefix;
            return (QueueServiceProducer) this;
        }

        public Integer getMessageTimeToLive() {
            return messageTimeToLive;
        }

        public void setMessageTimeToLive(Integer messageTimeToLive) {
            this.messageTimeToLive = messageTimeToLive;
        }

        public Integer getMessageVisibilityDelay() {
            return messageVisibilityDelay;
        }

        public void setMessageVisibilityDelay(Integer messageVisibilityDelay) {
            this.messageVisibilityDelay = messageVisibilityDelay;
        }

        public QueueServiceOperations getOperation() {
            return operation;
        }

        public void setOperation(QueueServiceOperations operation) {
            this.operation = operation;
        }

        public String getQueuePrefix() {
            return queuePrefix;
        }

        public void setQueuePrefix(String queuePrefix) {
            this.queuePrefix = queuePrefix;
        }
    }

    public static enum QueueServiceOperations {
        listQueues, createQueue, deleteQueue, addMessage, retrieveMessage, peekMessage, updateMessage, deleteMessage;
    }
}