/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.model.endpoint;

import java.util.Date;
import javax.annotation.Generated;
import org.apache.camel.model.AbstractEndpointBuilder;
import org.apache.camel.model.EndpointConsumerBuilder;
import org.apache.camel.model.EndpointProducerBuilder;

/**
 * The aws-cw component is used for sending metrics to an Amazon CloudWatch.
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointDslMojo")
public interface CwEndpointBuilder {


    public static class CwCommonBuilder<T extends AbstractEndpointBuilder>
            extends
                AbstractEndpointBuilder<T> {
        CwCommonBuilder(String path) {
            super("aws-cw", path);
        }
        /**
         * The metric namespace. The option is a java.lang.String type.
         */
        public T namespace(String namespace) {
            this.properties.put("namespace", namespace);
            return (T) this;
        }
        /**
         * To use the AmazonCloudWatch as the client. The option is a
         * com.amazonaws.services.cloudwatch.AmazonCloudWatch type.
         */
        public T amazonCwClient(Object amazonCwClient) {
            this.properties.put("amazonCwClient", amazonCwClient);
            return (T) this;
        }
        /**
         * The metric name. The option is a java.lang.String type.
         */
        public T name(String name) {
            this.properties.put("name", name);
            return (T) this;
        }
        /**
         * To define a proxy host when instantiating the CW client. The option
         * is a java.lang.String type.
         */
        public T proxyHost(String proxyHost) {
            this.properties.put("proxyHost", proxyHost);
            return (T) this;
        }
        /**
         * To define a proxy port when instantiating the CW client. The option
         * is a java.lang.Integer type.
         */
        public T proxyPort(Integer proxyPort) {
            this.properties.put("proxyPort", proxyPort);
            return (T) this;
        }
        /**
         * The region in which CW client needs to work. The option is a
         * java.lang.String type.
         */
        public T region(String region) {
            this.properties.put("region", region);
            return (T) this;
        }
        /**
         * The metric timestamp. The option is a java.util.Date type.
         */
        public T timestamp(Date timestamp) {
            this.properties.put("timestamp", timestamp);
            return (T) this;
        }
        /**
         * The metric unit. The option is a java.lang.String type.
         */
        public T unit(String unit) {
            this.properties.put("unit", unit);
            return (T) this;
        }
        /**
         * The metric value. The option is a java.lang.Double type.
         */
        public T value(Double value) {
            this.properties.put("value", value);
            return (T) this;
        }
        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities. The option
         * is a boolean type.
         */
        public T basicPropertyBinding(boolean basicPropertyBinding) {
            this.properties.put("basicPropertyBinding", basicPropertyBinding);
            return (T) this;
        }
        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported). The option
         * is a boolean type.
         */
        public T synchronous(boolean synchronous) {
            this.properties.put("synchronous", synchronous);
            return (T) this;
        }
        /**
         * Amazon AWS Access Key. The option is a java.lang.String type.
         */
        public T accessKey(String accessKey) {
            this.properties.put("accessKey", accessKey);
            return (T) this;
        }
        /**
         * Amazon AWS Secret Key. The option is a java.lang.String type.
         */
        public T secretKey(String secretKey) {
            this.properties.put("secretKey", secretKey);
            return (T) this;
        }
    }

    public static class CwProducerBuilder
            extends
                CwCommonBuilder<CwProducerBuilder>
            implements
                EndpointProducerBuilder {
        public CwProducerBuilder(String path) {
            super(path);
        }
    }
    public default CwProducerBuilder toCw(String path) {
        return new CwProducerBuilder(path);
    }
}