/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.model.endpoint;

import javax.annotation.Generated;
import org.apache.camel.model.AbstractEndpointBuilder;
import org.apache.camel.model.EndpointConsumerBuilder;
import org.apache.camel.model.EndpointProducerBuilder;
import org.apache.camel.spi.HeaderFilterStrategy;

/**
 * The aws-sns component is used for sending messages to an Amazon Simple
 * Notification Topic.
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointDslMojo")
public interface SnsEndpointBuilder {


    public static class SnsCommonBuilder<T extends AbstractEndpointBuilder>
            extends
                AbstractEndpointBuilder<T> {
        SnsCommonBuilder(String path) {
            super("aws-sns", path);
        }
        /**
         * Topic name or ARN. The option is a java.lang.String type.
         */
        public T topicNameOrArn(String topicNameOrArn) {
            this.properties.put("topicNameOrArn", topicNameOrArn);
            return (T) this;
        }
        /**
         * To use the AmazonSNS as the client. The option is a
         * com.amazonaws.services.sns.AmazonSNS type.
         */
        public T amazonSNSClient(Object amazonSNSClient) {
            this.properties.put("amazonSNSClient", amazonSNSClient);
            return (T) this;
        }
        /**
         * An SQS Client to use as bridge between SNS and SQS. The option is a
         * com.amazonaws.services.sqs.AmazonSQS type.
         */
        public T amazonSQSClient(Object amazonSQSClient) {
            this.properties.put("amazonSQSClient", amazonSQSClient);
            return (T) this;
        }
        /**
         * Setting the autocreation of the topic. The option is a boolean type.
         */
        public T autoCreateTopic(boolean autoCreateTopic) {
            this.properties.put("autoCreateTopic", autoCreateTopic);
            return (T) this;
        }
        /**
         * To use a custom HeaderFilterStrategy to map headers to/from Camel.
         * The option is a org.apache.camel.spi.HeaderFilterStrategy type.
         */
        public T headerFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {
            this.properties.put("headerFilterStrategy", headerFilterStrategy);
            return (T) this;
        }
        /**
         * The ID of an AWS-managed customer master key (CMK) for Amazon SNS or
         * a custom CMK. The option is a java.lang.String type.
         */
        public T kmsMasterKeyId(String kmsMasterKeyId) {
            this.properties.put("kmsMasterKeyId", kmsMasterKeyId);
            return (T) this;
        }
        /**
         * The message structure to use such as json. The option is a
         * java.lang.String type.
         */
        public T messageStructure(String messageStructure) {
            this.properties.put("messageStructure", messageStructure);
            return (T) this;
        }
        /**
         * The policy for this queue. The option is a java.lang.String type.
         */
        public T policy(String policy) {
            this.properties.put("policy", policy);
            return (T) this;
        }
        /**
         * To define a proxy host when instantiating the SNS client. The option
         * is a java.lang.String type.
         */
        public T proxyHost(String proxyHost) {
            this.properties.put("proxyHost", proxyHost);
            return (T) this;
        }
        /**
         * To define a proxy port when instantiating the SNS client. The option
         * is a java.lang.Integer type.
         */
        public T proxyPort(Integer proxyPort) {
            this.properties.put("proxyPort", proxyPort);
            return (T) this;
        }
        /**
         * The queueUrl to subscribe to. The option is a java.lang.String type.
         */
        public T queueUrl(String queueUrl) {
            this.properties.put("queueUrl", queueUrl);
            return (T) this;
        }
        /**
         * The region in which SNS client needs to work. The option is a
         * java.lang.String type.
         */
        public T region(String region) {
            this.properties.put("region", region);
            return (T) this;
        }
        /**
         * Define if Server Side Encryption is enabled or not on the topic. The
         * option is a boolean type.
         */
        public T serverSideEncryptionEnabled(boolean serverSideEncryptionEnabled) {
            this.properties.put("serverSideEncryptionEnabled", serverSideEncryptionEnabled);
            return (T) this;
        }
        /**
         * The subject which is used if the message header 'CamelAwsSnsSubject'
         * is not present. The option is a java.lang.String type.
         */
        public T subject(String subject) {
            this.properties.put("subject", subject);
            return (T) this;
        }
        /**
         * Define if the subscription between SNS Topic and SQS must be done or
         * not. The option is a boolean type.
         */
        public T subscribeSNStoSQS(boolean subscribeSNStoSQS) {
            this.properties.put("subscribeSNStoSQS", subscribeSNStoSQS);
            return (T) this;
        }
        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities. The option
         * is a boolean type.
         */
        public T basicPropertyBinding(boolean basicPropertyBinding) {
            this.properties.put("basicPropertyBinding", basicPropertyBinding);
            return (T) this;
        }
        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported). The option
         * is a boolean type.
         */
        public T synchronous(boolean synchronous) {
            this.properties.put("synchronous", synchronous);
            return (T) this;
        }
        /**
         * Amazon AWS Access Key. The option is a java.lang.String type.
         */
        public T accessKey(String accessKey) {
            this.properties.put("accessKey", accessKey);
            return (T) this;
        }
        /**
         * Amazon AWS Secret Key. The option is a java.lang.String type.
         */
        public T secretKey(String secretKey) {
            this.properties.put("secretKey", secretKey);
            return (T) this;
        }
    }

    public static class SnsProducerBuilder
            extends
                SnsCommonBuilder<SnsProducerBuilder>
            implements
                EndpointProducerBuilder {
        public SnsProducerBuilder(String path) {
            super(path);
        }
    }
    public default SnsProducerBuilder toSns(String path) {
        return new SnsProducerBuilder(path);
    }
}