/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.model.endpoint;

import javax.annotation.Generated;
import org.apache.camel.ExchangePattern;
import org.apache.camel.spi.ExceptionHandler;

/**
 * Camel Apache Pulsar Component
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointDslMojo")
public class PulsarEndpoint {


    public static class PulsarCommon<T extends EndpointConfiguration>
            extends
                EndpointConfiguration<T> {
        private Boolean basicPropertyBinding;
        private Boolean synchronous;

        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities. The option
         * is a boolean type.
         */
        public T basicPropertyBinding(boolean basicPropertyBinding) {
            this.basicPropertyBinding = basicPropertyBinding;
            return (T) this;
        }

        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported). The option
         * is a boolean type.
         */
        public T synchronous(boolean synchronous) {
            this.synchronous = synchronous;
            return (T) this;
        }

        public Boolean getBasicPropertyBinding() {
            return basicPropertyBinding;
        }

        public void setBasicPropertyBinding(Boolean basicPropertyBinding) {
            this.basicPropertyBinding = basicPropertyBinding;
        }

        public Boolean getSynchronous() {
            return synchronous;
        }

        public void setSynchronous(Boolean synchronous) {
            this.synchronous = synchronous;
        }
    }

    public static class PulsarConsumer extends PulsarCommon<PulsarConsumer> {
        private Boolean bridgeErrorHandler;
        private String consumerName;
        private String consumerNamePrefix;
        private Integer consumerQueueSize;
        private Integer numberOfConsumers;
        private String subscriptionName;
        private SubscriptionType subscriptionType;
        private ExceptionHandler exceptionHandler;
        private ExchangePattern exchangePattern;

        /**
         * Allows for bridging the consumer to the Camel routing Error Handler,
         * which mean any exceptions occurred while the consumer is trying to
         * pickup incoming messages, or the likes, will now be processed as a
         * message and handled by the routing Error Handler. By default the
         * consumer will use the org.apache.camel.spi.ExceptionHandler to deal
         * with exceptions, that will be logged at WARN or ERROR level and
         * ignored. The option is a boolean type.
         */
        public PulsarConsumer bridgeErrorHandler(boolean bridgeErrorHandler) {
            this.bridgeErrorHandler = bridgeErrorHandler;
            return (PulsarConsumer) this;
        }

        /**
         * Name of the consumer when subscription is EXCLUSIVE. The option is a
         * java.lang.String type.
         */
        public PulsarConsumer consumerName(String consumerName) {
            this.consumerName = consumerName;
            return (PulsarConsumer) this;
        }

        /**
         * Prefix to add to consumer names when a SHARED or FAILOVER
         * subscription is used. The option is a java.lang.String type.
         */
        public PulsarConsumer consumerNamePrefix(String consumerNamePrefix) {
            this.consumerNamePrefix = consumerNamePrefix;
            return (PulsarConsumer) this;
        }

        /**
         * Size of the consumer queue - defaults to 10. The option is a int
         * type.
         */
        public PulsarConsumer consumerQueueSize(int consumerQueueSize) {
            this.consumerQueueSize = consumerQueueSize;
            return (PulsarConsumer) this;
        }

        /**
         * Number of consumers - defaults to 1. The option is a int type.
         */
        public PulsarConsumer numberOfConsumers(int numberOfConsumers) {
            this.numberOfConsumers = numberOfConsumers;
            return (PulsarConsumer) this;
        }

        /**
         * Name of the subscription to use. The option is a java.lang.String
         * type.
         */
        public PulsarConsumer subscriptionName(String subscriptionName) {
            this.subscriptionName = subscriptionName;
            return (PulsarConsumer) this;
        }

        /**
         * Type of the subscription EXCLUSIVESHAREDFAILOVER, defaults to
         * EXCLUSIVE. The option is a
         * org.apache.camel.component.pulsar.utils.consumers.SubscriptionType
         * type.
         */
        public PulsarConsumer subscriptionType(SubscriptionType subscriptionType) {
            this.subscriptionType = subscriptionType;
            return (PulsarConsumer) this;
        }

        /**
         * To let the consumer use a custom ExceptionHandler. Notice if the
         * option bridgeErrorHandler is enabled then this option is not in use.
         * By default the consumer will deal with exceptions, that will be
         * logged at WARN or ERROR level and ignored. The option is a
         * org.apache.camel.spi.ExceptionHandler type.
         */
        public PulsarConsumer exceptionHandler(ExceptionHandler exceptionHandler) {
            this.exceptionHandler = exceptionHandler;
            return (PulsarConsumer) this;
        }

        /**
         * Sets the exchange pattern when the consumer creates an exchange. The
         * option is a org.apache.camel.ExchangePattern type.
         */
        public PulsarConsumer exchangePattern(ExchangePattern exchangePattern) {
            this.exchangePattern = exchangePattern;
            return (PulsarConsumer) this;
        }

        public Boolean getBridgeErrorHandler() {
            return bridgeErrorHandler;
        }

        public void setBridgeErrorHandler(Boolean bridgeErrorHandler) {
            this.bridgeErrorHandler = bridgeErrorHandler;
        }

        public String getConsumerName() {
            return consumerName;
        }

        public void setConsumerName(String consumerName) {
            this.consumerName = consumerName;
        }

        public String getConsumerNamePrefix() {
            return consumerNamePrefix;
        }

        public void setConsumerNamePrefix(String consumerNamePrefix) {
            this.consumerNamePrefix = consumerNamePrefix;
        }

        public Integer getConsumerQueueSize() {
            return consumerQueueSize;
        }

        public void setConsumerQueueSize(Integer consumerQueueSize) {
            this.consumerQueueSize = consumerQueueSize;
        }

        public Integer getNumberOfConsumers() {
            return numberOfConsumers;
        }

        public void setNumberOfConsumers(Integer numberOfConsumers) {
            this.numberOfConsumers = numberOfConsumers;
        }

        public String getSubscriptionName() {
            return subscriptionName;
        }

        public void setSubscriptionName(String subscriptionName) {
            this.subscriptionName = subscriptionName;
        }

        public SubscriptionType getSubscriptionType() {
            return subscriptionType;
        }

        public void setSubscriptionType(SubscriptionType subscriptionType) {
            this.subscriptionType = subscriptionType;
        }

        public ExceptionHandler getExceptionHandler() {
            return exceptionHandler;
        }

        public void setExceptionHandler(ExceptionHandler exceptionHandler) {
            this.exceptionHandler = exceptionHandler;
        }

        public ExchangePattern getExchangePattern() {
            return exchangePattern;
        }

        public void setExchangePattern(ExchangePattern exchangePattern) {
            this.exchangePattern = exchangePattern;
        }
    }

    public static class PulsarProducer extends PulsarCommon<PulsarProducer> {
        private String topic;
        private String producerName;

        /**
         * The Topic's full URI path including type, tenant and namespace. The
         * option is a java.lang.String type.
         */
        public PulsarProducer topic(String topic) {
            this.topic = topic;
            return (PulsarProducer) this;
        }

        /**
         * Name of the producer. The option is a java.lang.String type.
         */
        public PulsarProducer producerName(String producerName) {
            this.producerName = producerName;
            return (PulsarProducer) this;
        }

        public String getTopic() {
            return topic;
        }

        public void setTopic(String topic) {
            this.topic = topic;
        }

        public String getProducerName() {
            return producerName;
        }

        public void setProducerName(String producerName) {
            this.producerName = producerName;
        }
    }

    public static enum SubscriptionType {
        EXCLUSIVE, SHARED, FAILOVER;
    }
}