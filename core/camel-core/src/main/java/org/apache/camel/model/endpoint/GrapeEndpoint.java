/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.model.endpoint;

import javax.annotation.Generated;

/**
 * The grape component allows you to fetch, load and manage additional jars when
 * CamelContext is running.
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointDslMojo")
public class GrapeEndpoint {


    public static class GrapeCommon<T extends EndpointConfiguration>
            extends
                EndpointConfiguration<T> {
        private String defaultCoordinates;
        private Boolean basicPropertyBinding;
        private Boolean synchronous;

        /**
         * Maven coordinates to use as default to grab if the message body is
         * empty. The option is a java.lang.String type.
         */
        public T defaultCoordinates(String defaultCoordinates) {
            this.defaultCoordinates = defaultCoordinates;
            return (T) this;
        }

        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities. The option
         * is a boolean type.
         */
        public T basicPropertyBinding(boolean basicPropertyBinding) {
            this.basicPropertyBinding = basicPropertyBinding;
            return (T) this;
        }

        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported). The option
         * is a boolean type.
         */
        public T synchronous(boolean synchronous) {
            this.synchronous = synchronous;
            return (T) this;
        }

        public String getDefaultCoordinates() {
            return defaultCoordinates;
        }

        public void setDefaultCoordinates(String defaultCoordinates) {
            this.defaultCoordinates = defaultCoordinates;
        }

        public Boolean getBasicPropertyBinding() {
            return basicPropertyBinding;
        }

        public void setBasicPropertyBinding(Boolean basicPropertyBinding) {
            this.basicPropertyBinding = basicPropertyBinding;
        }

        public Boolean getSynchronous() {
            return synchronous;
        }

        public void setSynchronous(Boolean synchronous) {
            this.synchronous = synchronous;
        }
    }

    public static class GrapeConsumer extends GrapeCommon<GrapeConsumer> {
    }

    public static class GrapeProducer extends GrapeCommon<GrapeProducer> {
    }
}