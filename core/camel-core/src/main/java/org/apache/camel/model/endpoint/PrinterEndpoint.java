/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.model.endpoint;

import javax.annotation.Generated;

/**
 * The printer component is used for sending messages to printers as print jobs.
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointDslMojo")
public class PrinterEndpoint {


    public static class PrinterCommon<T extends EndpointConfiguration>
            extends
                EndpointConfiguration<T> {
        private String hostname;
        private Integer port;
        private String printername;
        private Integer copies;
        private Object docFlavor;
        private String flavor;
        private String mediaSize;
        private String mediaTray;
        private String mimeType;
        private String orientation;
        private String printerPrefix;
        private Boolean sendToPrinter;
        private String sides;
        private Boolean basicPropertyBinding;
        private Boolean synchronous;

        /**
         * Hostname of the printer. The option is a java.lang.String type.
         */
        public T hostname(String hostname) {
            this.hostname = hostname;
            return (T) this;
        }

        /**
         * Port number of the printer. The option is a int type.
         */
        public T port(int port) {
            this.port = port;
            return (T) this;
        }

        /**
         * Name of the printer. The option is a java.lang.String type.
         */
        public T printername(String printername) {
            this.printername = printername;
            return (T) this;
        }

        /**
         * Number of copies to print. The option is a int type.
         */
        public T copies(int copies) {
            this.copies = copies;
            return (T) this;
        }

        /**
         * Sets DocFlavor to use. The option is a javax.print.DocFlavor type.
         */
        public T docFlavor(Object docFlavor) {
            this.docFlavor = docFlavor;
            return (T) this;
        }

        /**
         * Sets DocFlavor to use. The option is a java.lang.String type.
         */
        public T flavor(String flavor) {
            this.flavor = flavor;
            return (T) this;
        }

        /**
         * Sets the stationary as defined by enumeration names in the
         * javax.print.attribute.standard.MediaSizeName API. The default setting
         * is to use North American Letter sized stationary. The value's case is
         * ignored, e.g. values of iso_a4 and ISO_A4 may be used. The option is
         * a java.lang.String type.
         */
        public T mediaSize(String mediaSize) {
            this.mediaSize = mediaSize;
            return (T) this;
        }

        /**
         * Sets MediaTray supported by the javax.print.DocFlavor API, for
         * example upper,middle etc. The option is a java.lang.String type.
         */
        public T mediaTray(String mediaTray) {
            this.mediaTray = mediaTray;
            return (T) this;
        }

        /**
         * Sets mimeTypes supported by the javax.print.DocFlavor API. The option
         * is a java.lang.String type.
         */
        public T mimeType(String mimeType) {
            this.mimeType = mimeType;
            return (T) this;
        }

        /**
         * Sets the page orientation. The option is a java.lang.String type.
         */
        public T orientation(String orientation) {
            this.orientation = orientation;
            return (T) this;
        }

        /**
         * Sets the prefix name of the printer, it is useful when the printer
         * name does not start with //hostname/printer. The option is a
         * java.lang.String type.
         */
        public T printerPrefix(String printerPrefix) {
            this.printerPrefix = printerPrefix;
            return (T) this;
        }

        /**
         * etting this option to false prevents sending of the print data to the
         * printer. The option is a boolean type.
         */
        public T sendToPrinter(boolean sendToPrinter) {
            this.sendToPrinter = sendToPrinter;
            return (T) this;
        }

        /**
         * Sets one sided or two sided printing based on the
         * javax.print.attribute.standard.Sides API. The option is a
         * java.lang.String type.
         */
        public T sides(String sides) {
            this.sides = sides;
            return (T) this;
        }

        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities. The option
         * is a boolean type.
         */
        public T basicPropertyBinding(boolean basicPropertyBinding) {
            this.basicPropertyBinding = basicPropertyBinding;
            return (T) this;
        }

        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported). The option
         * is a boolean type.
         */
        public T synchronous(boolean synchronous) {
            this.synchronous = synchronous;
            return (T) this;
        }

        public String getHostname() {
            return hostname;
        }

        public void setHostname(String hostname) {
            this.hostname = hostname;
        }

        public Integer getPort() {
            return port;
        }

        public void setPort(Integer port) {
            this.port = port;
        }

        public String getPrintername() {
            return printername;
        }

        public void setPrintername(String printername) {
            this.printername = printername;
        }

        public Integer getCopies() {
            return copies;
        }

        public void setCopies(Integer copies) {
            this.copies = copies;
        }

        public Object getDocFlavor() {
            return docFlavor;
        }

        public void setDocFlavor(Object docFlavor) {
            this.docFlavor = docFlavor;
        }

        public String getFlavor() {
            return flavor;
        }

        public void setFlavor(String flavor) {
            this.flavor = flavor;
        }

        public String getMediaSize() {
            return mediaSize;
        }

        public void setMediaSize(String mediaSize) {
            this.mediaSize = mediaSize;
        }

        public String getMediaTray() {
            return mediaTray;
        }

        public void setMediaTray(String mediaTray) {
            this.mediaTray = mediaTray;
        }

        public String getMimeType() {
            return mimeType;
        }

        public void setMimeType(String mimeType) {
            this.mimeType = mimeType;
        }

        public String getOrientation() {
            return orientation;
        }

        public void setOrientation(String orientation) {
            this.orientation = orientation;
        }

        public String getPrinterPrefix() {
            return printerPrefix;
        }

        public void setPrinterPrefix(String printerPrefix) {
            this.printerPrefix = printerPrefix;
        }

        public Boolean getSendToPrinter() {
            return sendToPrinter;
        }

        public void setSendToPrinter(Boolean sendToPrinter) {
            this.sendToPrinter = sendToPrinter;
        }

        public String getSides() {
            return sides;
        }

        public void setSides(String sides) {
            this.sides = sides;
        }

        public Boolean getBasicPropertyBinding() {
            return basicPropertyBinding;
        }

        public void setBasicPropertyBinding(Boolean basicPropertyBinding) {
            this.basicPropertyBinding = basicPropertyBinding;
        }

        public Boolean getSynchronous() {
            return synchronous;
        }

        public void setSynchronous(Boolean synchronous) {
            this.synchronous = synchronous;
        }
    }

    public static class PrinterConsumer
            extends
                PrinterCommon<PrinterConsumer> {
    }

    public static class PrinterProducer
            extends
                PrinterCommon<PrinterProducer> {
    }
}