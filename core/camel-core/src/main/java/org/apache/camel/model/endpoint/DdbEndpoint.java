/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.model.endpoint;

import javax.annotation.Generated;

/**
 * The aws-ddb component is used for storing and retrieving data from Amazon's
 * DynamoDB service.
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointDslMojo")
public class DdbEndpoint {


    public static class DdbCommon<T extends EndpointConfiguration>
            extends
                EndpointConfiguration<T> {
        private String tableName;
        private Object amazonDDBClient;
        private Boolean consistentRead;
        private String keyAttributeName;
        private String keyAttributeType;
        private DdbOperations operation;
        private String proxyHost;
        private Integer proxyPort;
        private Long readCapacity;
        private String region;
        private Long writeCapacity;
        private Boolean basicPropertyBinding;
        private Boolean synchronous;
        private String accessKey;
        private String secretKey;

        /**
         * The name of the table currently worked with. The option is a
         * java.lang.String type.
         */
        public T tableName(String tableName) {
            this.tableName = tableName;
            return (T) this;
        }

        /**
         * To use the AmazonDynamoDB as the client. The option is a
         * com.amazonaws.services.dynamodbv2.AmazonDynamoDB type.
         */
        public T amazonDDBClient(Object amazonDDBClient) {
            this.amazonDDBClient = amazonDDBClient;
            return (T) this;
        }

        /**
         * Determines whether or not strong consistency should be enforced when
         * data is read. The option is a boolean type.
         */
        public T consistentRead(boolean consistentRead) {
            this.consistentRead = consistentRead;
            return (T) this;
        }

        /**
         * Attribute name when creating table. The option is a java.lang.String
         * type.
         */
        public T keyAttributeName(String keyAttributeName) {
            this.keyAttributeName = keyAttributeName;
            return (T) this;
        }

        /**
         * Attribute type when creating table. The option is a java.lang.String
         * type.
         */
        public T keyAttributeType(String keyAttributeType) {
            this.keyAttributeType = keyAttributeType;
            return (T) this;
        }

        /**
         * What operation to perform. The option is a
         * org.apache.camel.component.aws.ddb.DdbOperations type.
         */
        public T operation(DdbOperations operation) {
            this.operation = operation;
            return (T) this;
        }

        /**
         * To define a proxy host when instantiating the DDB client. The option
         * is a java.lang.String type.
         */
        public T proxyHost(String proxyHost) {
            this.proxyHost = proxyHost;
            return (T) this;
        }

        /**
         * To define a proxy port when instantiating the DDB client. The option
         * is a java.lang.Integer type.
         */
        public T proxyPort(Integer proxyPort) {
            this.proxyPort = proxyPort;
            return (T) this;
        }

        /**
         * The provisioned throughput to reserve for reading resources from your
         * table. The option is a java.lang.Long type.
         */
        public T readCapacity(Long readCapacity) {
            this.readCapacity = readCapacity;
            return (T) this;
        }

        /**
         * The region in which DDB client needs to work. The option is a
         * java.lang.String type.
         */
        public T region(String region) {
            this.region = region;
            return (T) this;
        }

        /**
         * The provisioned throughput to reserved for writing resources to your
         * table. The option is a java.lang.Long type.
         */
        public T writeCapacity(Long writeCapacity) {
            this.writeCapacity = writeCapacity;
            return (T) this;
        }

        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities. The option
         * is a boolean type.
         */
        public T basicPropertyBinding(boolean basicPropertyBinding) {
            this.basicPropertyBinding = basicPropertyBinding;
            return (T) this;
        }

        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported). The option
         * is a boolean type.
         */
        public T synchronous(boolean synchronous) {
            this.synchronous = synchronous;
            return (T) this;
        }

        /**
         * Amazon AWS Access Key. The option is a java.lang.String type.
         */
        public T accessKey(String accessKey) {
            this.accessKey = accessKey;
            return (T) this;
        }

        /**
         * Amazon AWS Secret Key. The option is a java.lang.String type.
         */
        public T secretKey(String secretKey) {
            this.secretKey = secretKey;
            return (T) this;
        }

        public String getTableName() {
            return tableName;
        }

        public void setTableName(String tableName) {
            this.tableName = tableName;
        }

        public Object getAmazonDDBClient() {
            return amazonDDBClient;
        }

        public void setAmazonDDBClient(Object amazonDDBClient) {
            this.amazonDDBClient = amazonDDBClient;
        }

        public Boolean getConsistentRead() {
            return consistentRead;
        }

        public void setConsistentRead(Boolean consistentRead) {
            this.consistentRead = consistentRead;
        }

        public String getKeyAttributeName() {
            return keyAttributeName;
        }

        public void setKeyAttributeName(String keyAttributeName) {
            this.keyAttributeName = keyAttributeName;
        }

        public String getKeyAttributeType() {
            return keyAttributeType;
        }

        public void setKeyAttributeType(String keyAttributeType) {
            this.keyAttributeType = keyAttributeType;
        }

        public DdbOperations getOperation() {
            return operation;
        }

        public void setOperation(DdbOperations operation) {
            this.operation = operation;
        }

        public String getProxyHost() {
            return proxyHost;
        }

        public void setProxyHost(String proxyHost) {
            this.proxyHost = proxyHost;
        }

        public Integer getProxyPort() {
            return proxyPort;
        }

        public void setProxyPort(Integer proxyPort) {
            this.proxyPort = proxyPort;
        }

        public Long getReadCapacity() {
            return readCapacity;
        }

        public void setReadCapacity(Long readCapacity) {
            this.readCapacity = readCapacity;
        }

        public String getRegion() {
            return region;
        }

        public void setRegion(String region) {
            this.region = region;
        }

        public Long getWriteCapacity() {
            return writeCapacity;
        }

        public void setWriteCapacity(Long writeCapacity) {
            this.writeCapacity = writeCapacity;
        }

        public Boolean getBasicPropertyBinding() {
            return basicPropertyBinding;
        }

        public void setBasicPropertyBinding(Boolean basicPropertyBinding) {
            this.basicPropertyBinding = basicPropertyBinding;
        }

        public Boolean getSynchronous() {
            return synchronous;
        }

        public void setSynchronous(Boolean synchronous) {
            this.synchronous = synchronous;
        }

        public String getAccessKey() {
            return accessKey;
        }

        public void setAccessKey(String accessKey) {
            this.accessKey = accessKey;
        }

        public String getSecretKey() {
            return secretKey;
        }

        public void setSecretKey(String secretKey) {
            this.secretKey = secretKey;
        }
    }

    public static class DdbConsumer extends DdbCommon<DdbConsumer> {
    }

    public static class DdbProducer extends DdbCommon<DdbProducer> {
    }

    public static enum DdbOperations {
        BatchGetItems, DeleteItem, DeleteTable, DescribeTable, GetItem, PutItem, Query, Scan, UpdateItem, UpdateTable;
    }
}