/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.model.endpoint;

import javax.annotation.Generated;
import org.apache.camel.model.AbstractEndpointBuilder;
import org.apache.camel.model.EndpointConsumerBuilder;
import org.apache.camel.model.EndpointProducerBuilder;

/**
 * The aws-kms is used for managing Amazon KMS
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointDslMojo")
public interface KMSEndpointBuilder {


    public static class KMSCommonBuilder<T extends AbstractEndpointBuilder>
            extends
                AbstractEndpointBuilder<T> {
        KMSCommonBuilder(String path) {
            super("aws-kms", path);
        }
        /**
         * Logical name. The option is a <code>java.lang.String</code> type.
         */
        public T label(String label) {
            this.properties.put("label", label);
            return (T) this;
        }
        /**
         * The region in which KMS client needs to work. The option is a
         * <code>java.lang.String</code> type.
         */
        public T region(String region) {
            this.properties.put("region", region);
            return (T) this;
        }
        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities. The option
         * is a <code>boolean</code> type.
         */
        public T basicPropertyBinding(boolean basicPropertyBinding) {
            this.properties.put("basicPropertyBinding", basicPropertyBinding);
            return (T) this;
        }
        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities. The option
         * will be converted to a <code>boolean</code> type.
         */
        public T basicPropertyBinding(String basicPropertyBinding) {
            this.properties.put("basicPropertyBinding", basicPropertyBinding);
            return (T) this;
        }
        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported). The option
         * is a <code>boolean</code> type.
         */
        public T synchronous(boolean synchronous) {
            this.properties.put("synchronous", synchronous);
            return (T) this;
        }
        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported). The option
         * will be converted to a <code>boolean</code> type.
         */
        public T synchronous(String synchronous) {
            this.properties.put("synchronous", synchronous);
            return (T) this;
        }
    }

    public static class KMSProducerBuilder
            extends
                KMSCommonBuilder<KMSProducerBuilder>
            implements
                EndpointProducerBuilder {
        public KMSProducerBuilder(String path) {
            super(path);
        }
        /**
         * Amazon AWS Access Key. The option is a <code>java.lang.String</code>
         * type.
         */
        public KMSProducerBuilder accessKey(String accessKey) {
            this.properties.put("accessKey", accessKey);
            return (KMSProducerBuilder) this;
        }
        /**
         * To use a existing configured AWS KMS as client. The option is a
         * <code>com.amazonaws.services.kms.AWSKMS</code> type.
         */
        public KMSProducerBuilder kmsClient(Object kmsClient) {
            this.properties.put("kmsClient", kmsClient);
            return (KMSProducerBuilder) this;
        }
        /**
         * To use a existing configured AWS KMS as client. The option will be
         * converted to a <code>com.amazonaws.services.kms.AWSKMS</code> type.
         */
        public KMSProducerBuilder kmsClient(String kmsClient) {
            this.properties.put("kmsClient", kmsClient);
            return (KMSProducerBuilder) this;
        }
        /**
         * The operation to perform. The option is a
         * <code>org.apache.camel.component.aws.kms.KMSOperations</code> type.
         */
        public KMSProducerBuilder operation(KMSOperations operation) {
            this.properties.put("operation", operation);
            return (KMSProducerBuilder) this;
        }
        /**
         * The operation to perform. The option will be converted to a
         * <code>org.apache.camel.component.aws.kms.KMSOperations</code> type.
         */
        public KMSProducerBuilder operation(String operation) {
            this.properties.put("operation", operation);
            return (KMSProducerBuilder) this;
        }
        /**
         * To define a proxy host when instantiating the KMS client. The option
         * is a <code>java.lang.String</code> type.
         */
        public KMSProducerBuilder proxyHost(String proxyHost) {
            this.properties.put("proxyHost", proxyHost);
            return (KMSProducerBuilder) this;
        }
        /**
         * To define a proxy port when instantiating the KMS client. The option
         * is a <code>java.lang.Integer</code> type.
         */
        public KMSProducerBuilder proxyPort(Integer proxyPort) {
            this.properties.put("proxyPort", proxyPort);
            return (KMSProducerBuilder) this;
        }
        /**
         * To define a proxy port when instantiating the KMS client. The option
         * will be converted to a <code>java.lang.Integer</code> type.
         */
        public KMSProducerBuilder proxyPort(String proxyPort) {
            this.properties.put("proxyPort", proxyPort);
            return (KMSProducerBuilder) this;
        }
        /**
         * Amazon AWS Secret Key. The option is a <code>java.lang.String</code>
         * type.
         */
        public KMSProducerBuilder secretKey(String secretKey) {
            this.properties.put("secretKey", secretKey);
            return (KMSProducerBuilder) this;
        }
    }

    public static enum KMSOperations {
        listKeys, createKey, disableKey, scheduleKeyDeletion, describeKey, enableKey;
    }
    public default KMSProducerBuilder toKMS(String path) {
        return new KMSProducerBuilder(path);
    }
}