/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.model.endpoint;

import javax.annotation.Generated;

/**
 * This component integrates with Apache Tika to extract content and metadata
 * from thousands of file types.
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointDslMojo")
public class TikaEndpoint {


    public static class TikaCommon<T extends EndpointConfiguration>
            extends
                EndpointConfiguration<T> {
        private TikaOperation operation;
        private Object tikaConfig;
        private String tikaConfigUri;
        private String tikaParseOutputEncoding;
        private TikaParseOutputFormat tikaParseOutputFormat;
        private Boolean basicPropertyBinding;
        private Boolean synchronous;

        /**
         * Tika Operation. parse or detect. The option is a
         * org.apache.camel.component.tika.TikaOperation type.
         */
        public T operation(TikaOperation operation) {
            this.operation = operation;
            return (T) this;
        }

        /**
         * Tika Config. The option is a org.apache.tika.config.TikaConfig type.
         */
        public T tikaConfig(Object tikaConfig) {
            this.tikaConfig = tikaConfig;
            return (T) this;
        }

        /**
         * Tika Config Uri: The URI of tika-config.xml. The option is a
         * java.lang.String type.
         */
        public T tikaConfigUri(String tikaConfigUri) {
            this.tikaConfigUri = tikaConfigUri;
            return (T) this;
        }

        /**
         * Tika Parse Output Encoding - Used to specify the character encoding
         * of the parsed output. Defaults to Charset.defaultCharset() . The
         * option is a java.lang.String type.
         */
        public T tikaParseOutputEncoding(String tikaParseOutputEncoding) {
            this.tikaParseOutputEncoding = tikaParseOutputEncoding;
            return (T) this;
        }

        /**
         * Tika Output Format. Supported output formats. xml: Returns Parsed
         * Content as XML. html: Returns Parsed Content as HTML. text: Returns
         * Parsed Content as Text. textMain: Uses the boilerpipe library to
         * automatically extract the main content from a web page. The option is
         * a org.apache.camel.component.tika.TikaParseOutputFormat type.
         */
        public T tikaParseOutputFormat(
                TikaParseOutputFormat tikaParseOutputFormat) {
            this.tikaParseOutputFormat = tikaParseOutputFormat;
            return (T) this;
        }

        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities. The option
         * is a boolean type.
         */
        public T basicPropertyBinding(boolean basicPropertyBinding) {
            this.basicPropertyBinding = basicPropertyBinding;
            return (T) this;
        }

        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported). The option
         * is a boolean type.
         */
        public T synchronous(boolean synchronous) {
            this.synchronous = synchronous;
            return (T) this;
        }

        public TikaOperation getOperation() {
            return operation;
        }

        public void setOperation(TikaOperation operation) {
            this.operation = operation;
        }

        public Object getTikaConfig() {
            return tikaConfig;
        }

        public void setTikaConfig(Object tikaConfig) {
            this.tikaConfig = tikaConfig;
        }

        public String getTikaConfigUri() {
            return tikaConfigUri;
        }

        public void setTikaConfigUri(String tikaConfigUri) {
            this.tikaConfigUri = tikaConfigUri;
        }

        public String getTikaParseOutputEncoding() {
            return tikaParseOutputEncoding;
        }

        public void setTikaParseOutputEncoding(String tikaParseOutputEncoding) {
            this.tikaParseOutputEncoding = tikaParseOutputEncoding;
        }

        public TikaParseOutputFormat getTikaParseOutputFormat() {
            return tikaParseOutputFormat;
        }

        public void setTikaParseOutputFormat(
                TikaParseOutputFormat tikaParseOutputFormat) {
            this.tikaParseOutputFormat = tikaParseOutputFormat;
        }

        public Boolean getBasicPropertyBinding() {
            return basicPropertyBinding;
        }

        public void setBasicPropertyBinding(Boolean basicPropertyBinding) {
            this.basicPropertyBinding = basicPropertyBinding;
        }

        public Boolean getSynchronous() {
            return synchronous;
        }

        public void setSynchronous(Boolean synchronous) {
            this.synchronous = synchronous;
        }
    }

    public static class TikaConsumer extends TikaCommon<TikaConsumer> {
    }

    public static class TikaProducer extends TikaCommon<TikaProducer> {
    }

    public static enum TikaOperation {
        parse, detect;
    }

    public static enum TikaParseOutputFormat {
        xml, html, text, textMain;
    }
}