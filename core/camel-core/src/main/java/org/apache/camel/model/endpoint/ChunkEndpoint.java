/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.model.endpoint;

import javax.annotation.Generated;

/**
 * Transforms the message using a Chunk template.
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointDslMojo")
public class ChunkEndpoint {


    public static class ChunkCommon extends EndpointConfiguration {
        /**
         * Path to the resource. You can prefix with: classpath, file, http,
         * ref, or bean. classpath, file and http loads the resource using these
         * protocols (classpath is default). ref will lookup the resource in the
         * registry. bean will call a method on a bean to be used as the
         * resource. For bean you can specify the method name after dot, eg
         * bean:myBean.myMethod. The option is a java.lang.String type.
         */
        private String resourceUri;
        /**
         * Sets whether to use resource content cache or not. The option is a
         * boolean type.
         */
        private boolean contentCache;
        /**
         * Define the encoding of the body. The option is a java.lang.String
         * type.
         */
        private String encoding;
        /**
         * Define the file extension of the template. The option is a
         * java.lang.String type.
         */
        private String extension;
        /**
         * Define the themes folder to scan. The option is a java.lang.String
         * type.
         */
        private String themeFolder;
        /**
         * Define the theme layer to elaborate. The option is a java.lang.String
         * type.
         */
        private String themeLayer;
        /**
         * Define the themes subfolder to scan. The option is a java.lang.String
         * type.
         */
        private String themeSubfolder;
        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities. The option
         * is a boolean type.
         */
        private boolean basicPropertyBinding;
        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported). The option
         * is a boolean type.
         */
        private boolean synchronous;

        public String getResourceUri() {
            return resourceUri;
        }

        public void setResourceUri(String resourceUri) {
            this.resourceUri = resourceUri;
        }

        public boolean getContentCache() {
            return contentCache;
        }

        public void setContentCache(boolean contentCache) {
            this.contentCache = contentCache;
        }

        public String getEncoding() {
            return encoding;
        }

        public void setEncoding(String encoding) {
            this.encoding = encoding;
        }

        public String getExtension() {
            return extension;
        }

        public void setExtension(String extension) {
            this.extension = extension;
        }

        public String getThemeFolder() {
            return themeFolder;
        }

        public void setThemeFolder(String themeFolder) {
            this.themeFolder = themeFolder;
        }

        public String getThemeLayer() {
            return themeLayer;
        }

        public void setThemeLayer(String themeLayer) {
            this.themeLayer = themeLayer;
        }

        public String getThemeSubfolder() {
            return themeSubfolder;
        }

        public void setThemeSubfolder(String themeSubfolder) {
            this.themeSubfolder = themeSubfolder;
        }

        public boolean getBasicPropertyBinding() {
            return basicPropertyBinding;
        }

        public void setBasicPropertyBinding(boolean basicPropertyBinding) {
            this.basicPropertyBinding = basicPropertyBinding;
        }

        public boolean getSynchronous() {
            return synchronous;
        }

        public void setSynchronous(boolean synchronous) {
            this.synchronous = synchronous;
        }
    }

    public static class ChunkConsumer extends ChunkCommon {
    }

    public static class ChunkProducer extends ChunkCommon {
    }
}