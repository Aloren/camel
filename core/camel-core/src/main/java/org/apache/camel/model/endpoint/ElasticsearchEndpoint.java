/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.model.endpoint;

import javax.annotation.Generated;
import org.apache.camel.model.EndpointDefinition;

/**
 * The elasticsearch component is used for interfacing with ElasticSearch server
 * using REST API.
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.packaging.EndpointDslMojo")
public class ElasticsearchEndpoint {


    public static class ElasticsearchCommon<T extends EndpointDefinition>
            extends
                EndpointDefinition<T> {
        ElasticsearchCommon(String path) {
            super("elasticsearch-rest", path);
        }
        /**
         * Name of the cluster. The option is a java.lang.String type.
         */
        public T clusterName(String clusterName) {
            this.properties.put("clusterName", clusterName);
            return (T) this;
        }
        /**
         * The time in ms to wait before connection will timeout. The option is
         * a int type.
         */
        public T connectionTimeout(int connectionTimeout) {
            this.properties.put("connectionTimeout", connectionTimeout);
            return (T) this;
        }
        /**
         * Disconnect after it finish calling the producer. The option is a
         * boolean type.
         */
        public T disconnect(boolean disconnect) {
            this.properties.put("disconnect", disconnect);
            return (T) this;
        }
        /**
         * Enable SSL. The option is a boolean type.
         */
        public T enableSSL(boolean enableSSL) {
            this.properties.put("enableSSL", enableSSL);
            return (T) this;
        }
        /**
         * Comma separated list with ip:port formatted remote transport
         * addresses to use. The option is a java.lang.String type.
         */
        public T hostAddresses(String hostAddresses) {
            this.properties.put("hostAddresses", hostAddresses);
            return (T) this;
        }
        /**
         * The name of the index to act against. The option is a
         * java.lang.String type.
         */
        public T indexName(String indexName) {
            this.properties.put("indexName", indexName);
            return (T) this;
        }
        /**
         * The type of the index to act against. The option is a
         * java.lang.String type.
         */
        public T indexType(String indexType) {
            this.properties.put("indexType", indexType);
            return (T) this;
        }
        /**
         * The time in ms before retry. The option is a int type.
         */
        public T maxRetryTimeout(int maxRetryTimeout) {
            this.properties.put("maxRetryTimeout", maxRetryTimeout);
            return (T) this;
        }
        /**
         * What operation to perform. The option is a
         * org.apache.camel.component.elasticsearch.ElasticsearchOperation type.
         */
        public T operation(ElasticsearchOperation operation) {
            this.properties.put("operation", operation);
            return (T) this;
        }
        /**
         * Time in ms during which elasticsearch will keep search context alive.
         * The option is a int type.
         */
        public T scrollKeepAliveMs(int scrollKeepAliveMs) {
            this.properties.put("scrollKeepAliveMs", scrollKeepAliveMs);
            return (T) this;
        }
        /**
         * The timeout in ms to wait before the socket will timeout. The option
         * is a int type.
         */
        public T socketTimeout(int socketTimeout) {
            this.properties.put("socketTimeout", socketTimeout);
            return (T) this;
        }
        /**
         * Enable scroll usage. The option is a boolean type.
         */
        public T useScroll(boolean useScroll) {
            this.properties.put("useScroll", useScroll);
            return (T) this;
        }
        /**
         * Index creation waits for the write consistency number of shards to be
         * available. The option is a int type.
         */
        public T waitForActiveShards(int waitForActiveShards) {
            this.properties.put("waitForActiveShards", waitForActiveShards);
            return (T) this;
        }
        /**
         * Whether the endpoint should use basic property binding (Camel 2.x) or
         * the newer property binding with additional capabilities. The option
         * is a boolean type.
         */
        public T basicPropertyBinding(boolean basicPropertyBinding) {
            this.properties.put("basicPropertyBinding", basicPropertyBinding);
            return (T) this;
        }
        /**
         * Sets whether synchronous processing should be strictly used, or Camel
         * is allowed to use asynchronous processing (if supported). The option
         * is a boolean type.
         */
        public T synchronous(boolean synchronous) {
            this.properties.put("synchronous", synchronous);
            return (T) this;
        }
    }

    public static class ElasticsearchConsumer
            extends
                ElasticsearchCommon<ElasticsearchConsumer>
            implements
                EndpointDefinition.Consumer {
        public ElasticsearchConsumer(String path) {
            super(path);
        }
    }

    public static class ElasticsearchProducer
            extends
                ElasticsearchCommon<ElasticsearchProducer>
            implements
                EndpointDefinition.Producer {
        public ElasticsearchProducer(String path) {
            super(path);
        }
    }

    public static enum ElasticsearchOperation {
        Index, Update, Bulk, BulkIndex, GetById, MultiGet, MultiSearch, Delete, DeleteIndex, Search, Exists, Ping, Info;
    }
}